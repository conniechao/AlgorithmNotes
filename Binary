# coding: utf-8
#二进制:是用0和1两个数码来表示的数。它的基数为2，进位规则是“逢二进一”，借位规则是“借一当二”。

#加法： 0+0=0  0+1=1  1+0=1  1+1=10
#乘法: 0×0=0  1×0=0  0×1=0  1×1=1
#减法: 0－0=0  1－0=1  1－1=0  0－1=1
#除法: 0÷1=0  1÷1=1

#与十进制转换：
#（1）二进制转十进制： “按权展开求和”
#（2）十进制转二进制： “除以2取余，逆序排列”（除二取余法）
#（3）十进制小数转二进制数： “乘以2取整，顺序排列”（乘2取整法）

#余数指整数除法中被除数未被除尽部分，且余数的取值范围为0到除数之间（不包括除数）的整数。若被除数<除数，余数是被除数，商为0。

#Add Binary
#Given two binary strings, return their sum (also a binary string).
#The input strings are both non-empty and contains only characters 1 or 0.

#思路： 从最低位加到最高位，当前位：当前位+进位和%2，进位：当前位和/2，添加最后一次的进位，反向输出字符。

def addBinary(a, b):
    carry = 0
    str_a = str(a)
    str_b = str(b)
    str_result = []
    if (len(str_a) > 0) and (len(str_b) > 0):
        for i in range(len(str_a),0,-1):
            sum = (int(str_a[i-1]) + int(str_b[i-1]) + int(carry)) % 2
            carry = int((int(str_a[i-1]) + int(str_b[i-1])) / 2)
            str_result.append(str(sum))
        str_result.append(str(carry))     
    print (str_result)       
    print ("".join(list(reversed(str_result))))
    

addBinary(10,11)
